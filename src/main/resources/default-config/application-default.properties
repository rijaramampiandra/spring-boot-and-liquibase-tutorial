info.app.name=@pom.artifactId@
info.app.version=@pom.version@
info.app.timestamp=@timestamp@

# definition du repertoire de travaille. En linux on peut mettre /home/user
home.directory=c:/dev_tutorial

# Data spource for spring batch ()
spring.datasource.jdbc-url=jdbc:h2:file:${home.directory}/db/springLiquiBaseTutorial;AUTO_SERVER=TRUE;MODE=MSSQLServer
spring.datasource.username=sa
spring.datasource.password=sa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true

# ici on ne doit pas mettre CREATE ou CREATE-DROP car on a passer la main à liquibase
# validate : pour valider les séquences.
spring.jpa.hibernate.ddl-auto=validate

### LIQUIBASE ###
spring.liquibase.enabled=true
spring.liquibase.change-log=db/changelog/liquibase-master.xml

# @See : https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# Liquibase context [to define the contexts : dev, test, prod, local]
spring.liquibase.contexts = dev

# package du projet. Ceci est juste une optimisation de codage
base.package=com.java.spring

# GW
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/changelog/liquibase-master.xml

# Disable batch auto-start
spring.batch.job.enabled=false

spring.profiles.active=dev